// Generated by gencpp from file monstertruck_msgs/SetAlternativeTolerance.msg
// DO NOT EDIT!


#ifndef MONSTERTRUCK_MSGS_MESSAGE_SETALTERNATIVETOLERANCE_H
#define MONSTERTRUCK_MSGS_MESSAGE_SETALTERNATIVETOLERANCE_H

#include <ros/service_traits.h>


#include <monstertruck_msgs/SetAlternativeToleranceRequest.h>
#include <monstertruck_msgs/SetAlternativeToleranceResponse.h>


namespace monstertruck_msgs
{

struct SetAlternativeTolerance
{

typedef SetAlternativeToleranceRequest Request;
typedef SetAlternativeToleranceResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct SetAlternativeTolerance
} // namespace monstertruck_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::monstertruck_msgs::SetAlternativeTolerance > {
  static const char* value()
  {
    return "9332f7ba5e819792f5504c48f062b9f5";
  }

  static const char* value(const ::monstertruck_msgs::SetAlternativeTolerance&) { return value(); }
};

template<>
struct DataType< ::monstertruck_msgs::SetAlternativeTolerance > {
  static const char* value()
  {
    return "monstertruck_msgs/SetAlternativeTolerance";
  }

  static const char* value(const ::monstertruck_msgs::SetAlternativeTolerance&) { return value(); }
};


// service_traits::MD5Sum< ::monstertruck_msgs::SetAlternativeToleranceRequest> should match 
// service_traits::MD5Sum< ::monstertruck_msgs::SetAlternativeTolerance > 
template<>
struct MD5Sum< ::monstertruck_msgs::SetAlternativeToleranceRequest>
{
  static const char* value()
  {
    return MD5Sum< ::monstertruck_msgs::SetAlternativeTolerance >::value();
  }
  static const char* value(const ::monstertruck_msgs::SetAlternativeToleranceRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::monstertruck_msgs::SetAlternativeToleranceRequest> should match 
// service_traits::DataType< ::monstertruck_msgs::SetAlternativeTolerance > 
template<>
struct DataType< ::monstertruck_msgs::SetAlternativeToleranceRequest>
{
  static const char* value()
  {
    return DataType< ::monstertruck_msgs::SetAlternativeTolerance >::value();
  }
  static const char* value(const ::monstertruck_msgs::SetAlternativeToleranceRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::monstertruck_msgs::SetAlternativeToleranceResponse> should match 
// service_traits::MD5Sum< ::monstertruck_msgs::SetAlternativeTolerance > 
template<>
struct MD5Sum< ::monstertruck_msgs::SetAlternativeToleranceResponse>
{
  static const char* value()
  {
    return MD5Sum< ::monstertruck_msgs::SetAlternativeTolerance >::value();
  }
  static const char* value(const ::monstertruck_msgs::SetAlternativeToleranceResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::monstertruck_msgs::SetAlternativeToleranceResponse> should match 
// service_traits::DataType< ::monstertruck_msgs::SetAlternativeTolerance > 
template<>
struct DataType< ::monstertruck_msgs::SetAlternativeToleranceResponse>
{
  static const char* value()
  {
    return DataType< ::monstertruck_msgs::SetAlternativeTolerance >::value();
  }
  static const char* value(const ::monstertruck_msgs::SetAlternativeToleranceResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MONSTERTRUCK_MSGS_MESSAGE_SETALTERNATIVETOLERANCE_H
