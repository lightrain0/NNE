// Generated by gencpp from file monstertruck_msgs/GetGazeDirection.msg
// DO NOT EDIT!


#ifndef MONSTERTRUCK_MSGS_MESSAGE_GETGAZEDIRECTION_H
#define MONSTERTRUCK_MSGS_MESSAGE_GETGAZEDIRECTION_H

#include <ros/service_traits.h>


#include <monstertruck_msgs/GetGazeDirectionRequest.h>
#include <monstertruck_msgs/GetGazeDirectionResponse.h>


namespace monstertruck_msgs
{

struct GetGazeDirection
{

typedef GetGazeDirectionRequest Request;
typedef GetGazeDirectionResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetGazeDirection
} // namespace monstertruck_msgs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::monstertruck_msgs::GetGazeDirection > {
  static const char* value()
  {
    return "ee22875cee6c3a88c49d94bb0d6561c6";
  }

  static const char* value(const ::monstertruck_msgs::GetGazeDirection&) { return value(); }
};

template<>
struct DataType< ::monstertruck_msgs::GetGazeDirection > {
  static const char* value()
  {
    return "monstertruck_msgs/GetGazeDirection";
  }

  static const char* value(const ::monstertruck_msgs::GetGazeDirection&) { return value(); }
};


// service_traits::MD5Sum< ::monstertruck_msgs::GetGazeDirectionRequest> should match 
// service_traits::MD5Sum< ::monstertruck_msgs::GetGazeDirection > 
template<>
struct MD5Sum< ::monstertruck_msgs::GetGazeDirectionRequest>
{
  static const char* value()
  {
    return MD5Sum< ::monstertruck_msgs::GetGazeDirection >::value();
  }
  static const char* value(const ::monstertruck_msgs::GetGazeDirectionRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::monstertruck_msgs::GetGazeDirectionRequest> should match 
// service_traits::DataType< ::monstertruck_msgs::GetGazeDirection > 
template<>
struct DataType< ::monstertruck_msgs::GetGazeDirectionRequest>
{
  static const char* value()
  {
    return DataType< ::monstertruck_msgs::GetGazeDirection >::value();
  }
  static const char* value(const ::monstertruck_msgs::GetGazeDirectionRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::monstertruck_msgs::GetGazeDirectionResponse> should match 
// service_traits::MD5Sum< ::monstertruck_msgs::GetGazeDirection > 
template<>
struct MD5Sum< ::monstertruck_msgs::GetGazeDirectionResponse>
{
  static const char* value()
  {
    return MD5Sum< ::monstertruck_msgs::GetGazeDirection >::value();
  }
  static const char* value(const ::monstertruck_msgs::GetGazeDirectionResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::monstertruck_msgs::GetGazeDirectionResponse> should match 
// service_traits::DataType< ::monstertruck_msgs::GetGazeDirection > 
template<>
struct DataType< ::monstertruck_msgs::GetGazeDirectionResponse>
{
  static const char* value()
  {
    return DataType< ::monstertruck_msgs::GetGazeDirection >::value();
  }
  static const char* value(const ::monstertruck_msgs::GetGazeDirectionResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // MONSTERTRUCK_MSGS_MESSAGE_GETGAZEDIRECTION_H
