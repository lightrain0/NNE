// Generated by gencpp from file heatmap/signal_service.msg
// DO NOT EDIT!


#ifndef HEATMAP_MESSAGE_SIGNAL_SERVICE_H
#define HEATMAP_MESSAGE_SIGNAL_SERVICE_H

#include <ros/service_traits.h>


#include <heatmap/signal_serviceRequest.h>
#include <heatmap/signal_serviceResponse.h>


namespace heatmap
{

struct signal_service
{

typedef signal_serviceRequest Request;
typedef signal_serviceResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct signal_service
} // namespace heatmap


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::heatmap::signal_service > {
  static const char* value()
  {
    return "58da7ff476f57ac5f5a609923bf16293";
  }

  static const char* value(const ::heatmap::signal_service&) { return value(); }
};

template<>
struct DataType< ::heatmap::signal_service > {
  static const char* value()
  {
    return "heatmap/signal_service";
  }

  static const char* value(const ::heatmap::signal_service&) { return value(); }
};


// service_traits::MD5Sum< ::heatmap::signal_serviceRequest> should match 
// service_traits::MD5Sum< ::heatmap::signal_service > 
template<>
struct MD5Sum< ::heatmap::signal_serviceRequest>
{
  static const char* value()
  {
    return MD5Sum< ::heatmap::signal_service >::value();
  }
  static const char* value(const ::heatmap::signal_serviceRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::heatmap::signal_serviceRequest> should match 
// service_traits::DataType< ::heatmap::signal_service > 
template<>
struct DataType< ::heatmap::signal_serviceRequest>
{
  static const char* value()
  {
    return DataType< ::heatmap::signal_service >::value();
  }
  static const char* value(const ::heatmap::signal_serviceRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::heatmap::signal_serviceResponse> should match 
// service_traits::MD5Sum< ::heatmap::signal_service > 
template<>
struct MD5Sum< ::heatmap::signal_serviceResponse>
{
  static const char* value()
  {
    return MD5Sum< ::heatmap::signal_service >::value();
  }
  static const char* value(const ::heatmap::signal_serviceResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::heatmap::signal_serviceResponse> should match 
// service_traits::DataType< ::heatmap::signal_service > 
template<>
struct DataType< ::heatmap::signal_serviceResponse>
{
  static const char* value()
  {
    return DataType< ::heatmap::signal_service >::value();
  }
  static const char* value(const ::heatmap::signal_serviceResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // HEATMAP_MESSAGE_SIGNAL_SERVICE_H
