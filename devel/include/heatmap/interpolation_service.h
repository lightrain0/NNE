// Generated by gencpp from file heatmap/interpolation_service.msg
// DO NOT EDIT!


#ifndef HEATMAP_MESSAGE_INTERPOLATION_SERVICE_H
#define HEATMAP_MESSAGE_INTERPOLATION_SERVICE_H

#include <ros/service_traits.h>


#include <heatmap/interpolation_serviceRequest.h>
#include <heatmap/interpolation_serviceResponse.h>


namespace heatmap
{

struct interpolation_service
{

typedef interpolation_serviceRequest Request;
typedef interpolation_serviceResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct interpolation_service
} // namespace heatmap


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::heatmap::interpolation_service > {
  static const char* value()
  {
    return "bd9ec5953508bf6d64d0b75ca3f20626";
  }

  static const char* value(const ::heatmap::interpolation_service&) { return value(); }
};

template<>
struct DataType< ::heatmap::interpolation_service > {
  static const char* value()
  {
    return "heatmap/interpolation_service";
  }

  static const char* value(const ::heatmap::interpolation_service&) { return value(); }
};


// service_traits::MD5Sum< ::heatmap::interpolation_serviceRequest> should match 
// service_traits::MD5Sum< ::heatmap::interpolation_service > 
template<>
struct MD5Sum< ::heatmap::interpolation_serviceRequest>
{
  static const char* value()
  {
    return MD5Sum< ::heatmap::interpolation_service >::value();
  }
  static const char* value(const ::heatmap::interpolation_serviceRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::heatmap::interpolation_serviceRequest> should match 
// service_traits::DataType< ::heatmap::interpolation_service > 
template<>
struct DataType< ::heatmap::interpolation_serviceRequest>
{
  static const char* value()
  {
    return DataType< ::heatmap::interpolation_service >::value();
  }
  static const char* value(const ::heatmap::interpolation_serviceRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::heatmap::interpolation_serviceResponse> should match 
// service_traits::MD5Sum< ::heatmap::interpolation_service > 
template<>
struct MD5Sum< ::heatmap::interpolation_serviceResponse>
{
  static const char* value()
  {
    return MD5Sum< ::heatmap::interpolation_service >::value();
  }
  static const char* value(const ::heatmap::interpolation_serviceResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::heatmap::interpolation_serviceResponse> should match 
// service_traits::DataType< ::heatmap::interpolation_service > 
template<>
struct DataType< ::heatmap::interpolation_serviceResponse>
{
  static const char* value()
  {
    return DataType< ::heatmap::interpolation_service >::value();
  }
  static const char* value(const ::heatmap::interpolation_serviceResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // HEATMAP_MESSAGE_INTERPOLATION_SERVICE_H
